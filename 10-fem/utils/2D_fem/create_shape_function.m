function f = create_shape_function(num_node_per_element)
%
% shape function and derivatives.
%
% @since 1.0.1
% @param {sym} [xi] natural coordinates (-1 ... +1).
% @param {sym} [eta] natural coordinates (-1 ... +1).
% @param {array} [shape] Shape functions.
% @return {array} [diff_shape] derivatives w.r.t. xi and eta.
%

    switch num_node_per_element

        case 4
            f = @shape_function_Q4;
        case 8
            f = @shape_function_Q8;
        case 9
            f = @shape_function_Q9;

    end

    function [shape, diff_shape] = shape_function_Q4(xi, eta)

        shape = 1 / 4 * [ (1 - xi) * (1 - eta), (1 + xi) * (1 - eta), (1 + xi) * (1 + eta), (1 - xi) * (1 + eta)];

        diff_shape = 1 / 4 * [
            - (1 - eta), 1 - eta, 1 + eta, - (1 + eta);
            - (1 - xi), - (1 + xi), 1 + xi, 1 - xi;
        ];

    end

    function [shape, diff_shape] = shape_function_Q8(xi, eta)

        shape = [
            (1-xi)*(1-eta)*(-xi-eta-1), ...
            2*(1-eta)*(1-xi^2), ...
            (1+xi)*(1-eta)*(xi-eta-1), ...
            2*(1+xi)*(1-eta^2), ...
            (1+xi)*(1+eta)*(xi+eta-1), ...
            2*(1+eta)*(1-xi^2), ...
            (1-xi)*(1+eta)*(-xi+eta-1), ...
            2*(1-xi)*(1-eta^2)
        ];

        diff_shape = [
            - ((eta - 1)*(eta + xi + 1))/4 - ((eta - 1)*(xi - 1))/4, ...
            (xi*(2*eta - 2))/2, ...
            ((eta - 1)*(eta - xi + 1))/4 - ((eta - 1)*(xi + 1))/4, ...
            1/2 - eta^2/2, ...
            ((eta + 1)*(eta + xi - 1))/4 + ((eta + 1)*(xi + 1))/4, ...
            -(xi*(2*eta + 2))/2, ...
            ((eta + 1)*(xi - eta + 1))/4 + ((eta + 1)*(xi - 1))/4, ....
            eta^2/2 - 1/2;
            - ((xi - 1)*(eta + xi + 1))/4 - ((eta - 1)*(xi - 1))/4, ...
            xi^2/2 - 1/2, ....
            ((xi + 1)*(eta - xi + 1))/4 + ((eta - 1)*(xi + 1))/4, ...
            -(eta*(2*xi + 2))/2, ...
            ((xi + 1)*(eta + xi - 1))/4 + ((eta + 1)*(xi + 1))/4, ...
            1/2 - xi^2/2, ...
            ((xi - 1)*(xi - eta + 1))/4 - ((eta + 1)*(xi - 1))/4, ...
            (eta*(2*xi - 2))/2
        ];

    end

    function [shape, diff_shape] = shape_function_Q9(xi, eta)

        shape = [
            (eta*xi*(eta - 1)*(xi - 1))/4, ...
            (eta*xi*(xi/2 + 1/2)*(eta - 1))/2, ...
            (eta*xi*(xi/2 + 1/2)*(eta + 1))/2, ...
            (eta*xi*(eta + 1)*(xi - 1))/4, ...
            -(eta*(eta - 1)*(xi - 1)*(xi + 1))/2, ...
            -xi*(xi/2 + 1/2)*(eta - 1)*(eta + 1), ...
            -(eta*(eta + 1)*(xi - 1)*(xi + 1))/2, ...
            -(xi*(eta - 1)*(eta + 1)*(xi - 1))/2, ...
            (eta - 1)*(eta + 1)*(xi - 1)*(xi + 1)
        ];

        diff_shape = [
            (eta*xi*(eta - 1))/4 + (eta*(eta - 1)*(xi - 1))/4,...
            (eta*xi*(eta - 1))/4 + (eta*(xi/2 + 1/2)*(eta - 1))/2,...
            (eta*xi*(eta + 1))/4 + (eta*(xi/2 + 1/2)*(eta + 1))/2,...
            (eta*xi*(eta + 1))/4 + (eta*(eta + 1)*(xi - 1))/4,...
            -(eta*(eta - 1)*(xi - 1))/2 - (eta*(eta - 1)*(xi + 1))/2,...
            -(xi/2 + 1/2)*(eta - 1)*(eta + 1) - (xi*(eta - 1)*(eta + 1))/2,...
            -(eta*(eta + 1)*(xi - 1))/2 - (eta*(eta + 1)*(xi + 1))/2,...
            -(xi*(eta - 1)*(eta + 1))/2 - ((eta - 1)*(eta + 1)*(xi - 1))/2,...
            (eta - 1)*(eta + 1)*(xi - 1) + (eta - 1)*(eta + 1)*(xi + 1);
            (eta*xi*(xi - 1))/4 + (xi*(eta - 1)*(xi - 1))/4, ...
            (eta*xi*(xi/2 + 1/2))/2 + (xi*(xi/2 + 1/2)*(eta - 1))/2, ...
            (eta*xi*(xi/2 + 1/2))/2 + (xi*(xi/2 + 1/2)*(eta + 1))/2, ...
            (eta*xi*(xi - 1))/4 + (xi*(eta + 1)*(xi - 1))/4, ...
            -(eta*(xi - 1)*(xi + 1))/2 - ((eta - 1)*(xi - 1)*(xi + 1))/2, ...
            -xi*(xi/2 + 1/2)*(eta - 1) - xi*(xi/2 + 1/2)*(eta + 1), ...
            -(eta*(xi - 1)*(xi + 1))/2 - ((eta + 1)*(xi - 1)*(xi + 1))/2, ...
            -(xi*(eta - 1)*(xi - 1))/2 - (xi*(eta + 1)*(xi - 1))/2, ...
            (eta - 1)*(xi - 1)*(xi + 1) + (eta + 1)*(xi - 1)*(xi + 1)
        ];

    end

end
